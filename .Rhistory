mutate(word = reorder(word,n)) %>%
ggplot(aes(x=word, y=n))+
ylab("Frequency")+
ggtitle("Public transportation services")+
geom_col()+
coord_flip()+
theme_light()+
theme(plot.title = element_text(hjust = 0.5))
grid.arrange(plot1, plot2, ncol=2,
bottom ="Figure 1. Most common words")
# Create a function to plot the top 10 negative and positive words for people
# tweets about the ride services in Washington D.C. area
plot_sentiment <- function(tweets_sentiment, top_words=10, figure_title){
tweets_sentiment %>%
group_by(sentiment) %>%
top_n(top_words) %>%
ungroup() %>%
mutate(Percentage = n/sum(n)) %>%
mutate(word = reorder(word,Percentage)) %>%
ggplot(aes(word, Percentage, fill=sentiment))+
geom_col(show.legend = F)+
geom_text(aes(label = label_percent()(Percentage) ), nudge_y = 0.025,
size = 3)+
facet_wrap(~sentiment, scales = "free_y")+
coord_flip()+
theme_bw()
}
plot_sentiment(RSS.tweets_Sentiment, 10,
"Figure 2. Common negative and Poitive words for the Ridesharing services")
plot_sentiment(PT.tweets_Sentiment, 10,
"Figure 3. Common negative and Poitive words for the Public Transporatio")
summary_table %>%
kbl(position = "center", caption = "Table 1. Total number of the downladed twitter posts")
summary_table %>%
kbl(position = "center")
Uber_word_sentiment <- total_sentiment_score(Uber.tweets_Sentiment, "1.Uber")
Lyft_word_sentiment <- total_sentiment_score(Lyft.tweets_Sentiment, "2.Lyft")
Taxi_word_sentiment <- total_sentiment_score(Taxi.tweets_Sentiment, "3.Taxi")
Amtrak_word_sentiment <- total_sentiment_score(Amtrak.tweets_Sentiment, "4.Amtrak")
metro_word_sentiment <- total_sentiment_score(metro.tweets_Sentiment, "5.Metro")
metrobus_word_sentiment <- total_sentiment_score(metrobus.tweets_Sentiment,"6.Metrobus")
word_sentiment_analysis_results <- rbind(Uber_word_sentiment,
Lyft_word_sentiment,
Taxi_word_sentiment,
Amtrak_word_sentiment,
metro_word_sentiment,
metrobus_word_sentiment)
word_sentiment_analysis_results %>%
ggplot(aes(x=Sentiment, y=Sentiment_Score, fill=Sentiment))+
geom_col(show.legend = T)+
geom_text(aes(label = paste0(round(Sentiment_Score*100, digits = 2),"%")), nudge_y = 0.05,size = 3)+
facet_wrap(~Service, scales = "free_x",as.table = TRUE)+
theme_bw()
# Create a function to plot the top 10 negative and positive words for people
# tweets about the ride services in Washington D.C. area
plot_sentiment <- function(tweets_sentiment, top_words=10, figure_title){
tweets_sentiment %>%
group_by(sentiment) %>%
top_n(top_words) %>%
ungroup() %>%
mutate(Percentage = n/sum(n)) %>%
mutate(word = reorder(word,Percentage)) %>%
ggplot(aes(word, Percentage, fill=sentiment))+
geom_col(show.legend = F)+
geom_text(aes(label = label_percent()(Percentage) ), nudge_y = 0.025,
size = 3)+
facet_wrap(~sentiment, scales = "free_y")+
coord_flip()+
theme_bw()+
labs(caption = figure_title)
}
plot_sentiment(RSS.tweets_Sentiment, 10,
"Figure 2. Common negative and Poitive words for the Ridesharing services")
plot_sentiment(PT.tweets_Sentiment, 10,
"Figure 3. Common negative and Poitive words for the Public Transporatio")
?labs()
?theme()
# Create a function to plot the top 10 negative and positive words for people
# tweets about the ride services in Washington D.C. area
plot_sentiment <- function(tweets_sentiment, top_words=10, figure_title){
tweets_sentiment %>%
group_by(sentiment) %>%
top_n(top_words) %>%
ungroup() %>%
mutate(Percentage = n/sum(n)) %>%
mutate(word = reorder(word,Percentage)) %>%
ggplot(aes(word, Percentage, fill=sentiment))+
geom_col(show.legend = F)+
geom_text(aes(label = label_percent()(Percentage) ), nudge_y = 0.025,
size = 3)+
facet_wrap(~sentiment, scales = "free_y")+
coord_flip()+
theme_bw()+
labs(caption = figure_title)+
theme(plot.caption.position = "plot")
}
plot_sentiment(RSS.tweets_Sentiment, 10,
"Figure 2. Common negative and Poitive words for the Ridesharing services")
plot_sentiment(PT.tweets_Sentiment, 10,
"Figure 3. Common negative and Poitive words for the Public Transporatio")
# Create a function to plot the top 10 negative and positive words for people
# tweets about the ride services in Washington D.C. area
plot_sentiment <- function(tweets_sentiment, top_words=10, figure_title){
tweets_sentiment %>%
group_by(sentiment) %>%
top_n(top_words) %>%
ungroup() %>%
mutate(Percentage = n/sum(n)) %>%
mutate(word = reorder(word,Percentage)) %>%
ggplot(aes(word, Percentage, fill=sentiment))+
geom_col(show.legend = F)+
geom_text(aes(label = label_percent()(Percentage) ), nudge_y = 0.025,
size = 3)+
facet_wrap(~sentiment, scales = "free_y")+
coord_flip()+
theme_bw()+
labs(caption = figure_title)+
theme(plot.caption.position = "center")
}
plot_sentiment(RSS.tweets_Sentiment, 10,
"Figure 2. Common negative and Poitive words for the Ridesharing services")
# Create a function to plot the top 10 negative and positive words for people
# tweets about the ride services in Washington D.C. area
plot_sentiment <- function(tweets_sentiment, top_words=10, figure_title){
tweets_sentiment %>%
group_by(sentiment) %>%
top_n(top_words) %>%
ungroup() %>%
mutate(Percentage = n/sum(n)) %>%
mutate(word = reorder(word,Percentage)) %>%
ggplot(aes(word, Percentage, fill=sentiment))+
geom_col(show.legend = F)+
geom_text(aes(label = label_percent()(Percentage) ), nudge_y = 0.025,
size = 3)+
facet_wrap(~sentiment, scales = "free_y")+
coord_flip()+
theme_bw()+
labs(caption = figure_title)+
theme(plot.caption.position = -1)
}
plot_sentiment(RSS.tweets_Sentiment, 10,
"Figure 2. Common negative and Poitive words for the Ridesharing services")
# Create a function to plot the top 10 negative and positive words for people
# tweets about the ride services in Washington D.C. area
plot_sentiment <- function(tweets_sentiment, top_words=10, figure_title){
tweets_sentiment %>%
group_by(sentiment) %>%
top_n(top_words) %>%
ungroup() %>%
mutate(Percentage = n/sum(n)) %>%
mutate(word = reorder(word,Percentage)) %>%
ggplot(aes(word, Percentage, fill=sentiment))+
geom_col(show.legend = F)+
geom_text(aes(label = label_percent()(Percentage) ), nudge_y = 0.025,
size = 3)+
facet_wrap(~sentiment, scales = "free_y")+
coord_flip()+
theme_bw()+
labs(caption = figure_title)+
theme(plot.caption.position = "plot")
}
plot_sentiment(RSS.tweets_Sentiment, 10,
"Figure 2. Common negative and Poitive words for the Ridesharing services")
plot_sentiment(PT.tweets_Sentiment, 10,
"Figure 3. Common negative and Poitive words for the Public Transporatio")
# Create a function to plot the top 10 negative and positive words for people
# tweets about the ride services in Washington D.C. area
plot_sentiment <- function(tweets_sentiment, top_words=10, figure_title){
tweets_sentiment %>%
group_by(sentiment) %>%
top_n(top_words) %>%
ungroup() %>%
mutate(Percentage = n/sum(n)) %>%
mutate(word = reorder(word,Percentage)) %>%
ggplot(aes(word, Percentage, fill=sentiment))+
geom_col(show.legend = F)+
geom_text(aes(label = label_percent()(Percentage) ), nudge_y = 0.025,
size = 3)+
facet_wrap(~sentiment, scales = "free_y")+
coord_flip()+
theme_bw()+
labs(caption = figure_title)+
theme(plot.caption.position = "panel")
}
plot_sentiment(RSS.tweets_Sentiment, 10,
"Figure 2. Common negative and Poitive words for the Ridesharing services")
plot_sentiment(PT.tweets_Sentiment, 10,
"Figure 3. Common negative and Poitive words for the Public Transporatio")
?labs
# Create a function to plot the top 10 negative and positive words for people
# tweets about the ride services in Washington D.C. area
plot_sentiment <- function(tweets_sentiment, top_words=10, figure_title){
tweets_sentiment %>%
group_by(sentiment) %>%
top_n(top_words) %>%
ungroup() %>%
mutate(Percentage = n/sum(n)) %>%
mutate(word = reorder(word,Percentage)) %>%
ggplot(aes(word, Percentage, fill=sentiment))+
geom_col(show.legend = F)+
geom_text(aes(label = label_percent()(Percentage) ), nudge_y = 0.025,
size = 3)+
facet_wrap(~sentiment, scales = "free_y")+
coord_flip()+
theme_bw()+
labs(x = figure_title)
}
plot_sentiment(RSS.tweets_Sentiment, 10,
"Figure 2. Common negative and Poitive words for the Ridesharing services")
plot_sentiment(PT.tweets_Sentiment, 10,
"Figure 3. Common negative and Poitive words for the Public Transporatio")
# Create a function to plot the top 10 negative and positive words for people
# tweets about the ride services in Washington D.C. area
plot_sentiment <- function(tweets_sentiment, top_words=10, figure_title){
tweets_sentiment %>%
group_by(sentiment) %>%
top_n(top_words) %>%
ungroup() %>%
mutate(Percentage = n/sum(n)) %>%
mutate(word = reorder(word,Percentage)) %>%
ggplot(aes(word, Percentage, fill=sentiment))+
geom_col(show.legend = F)+
geom_text(aes(label = label_percent()(Percentage) ), nudge_y = 0.025,
size = 3)+
facet_wrap(~sentiment, scales = "free_y")+
coord_flip()+
theme_bw()+
labs(y = figure_title)
}
plot_sentiment(RSS.tweets_Sentiment, 10,
"Figure 2. Common negative and Poitive words for the Ridesharing services")
plot_sentiment(PT.tweets_Sentiment, 10,
"Figure 3. Common negative and Poitive words for the Public Transporatio")
AppBased_Taxi_word_sentiment <- total_sentiment_score(rbind(Uber.tweets_Sentiment,
Lyft.tweets_Sentiment),
"1.AppBased_Taxi")
Normal_Taxi_word_sentiment <- total_sentiment_score(Taxi.tweets_Sentiment,
"2.Normal_Taxi")
Train_word_sentiment <- total_sentiment_score(rbind(Amtrak.tweets_Sentiment,
metro.tweets_Sentiment),
"3.Train")
Bus_word_sentiment <- total_sentiment_score(metrobus.tweets_Sentiment,
"4.Bus")
word_sentiment_analysis_results <- rbind(AppBased_Taxi_word_sentiment,
Normal_Taxi_word_sentiment,
Train_word_sentiment,
Bus_word_sentiment)
word_sentiment_analysis_results %>%
ggplot(aes(x=Sentiment, y=Sentiment_Score, fill=Sentiment))+
geom_col(show.legend = T)+
geom_text(aes(label = paste0(round(Sentiment_Score*100, digits = 2),"%")), nudge_y = 0.05,size = 3)+
facet_wrap(~Service, scales = "free_x",as.table = TRUE)+
theme_bw()+
labs(caption = "Figure 5. Sentiment Analysis at the word level (4 categories)")+
theme(axis.title=element_blank(),
plot.title=element_text(hjust = myhjust),
plot.subtitle=element_text(hjust = myhjust ),
plot.caption=element_text(hjust = myhjust))
AppBased_Taxi_word_sentiment <- total_sentiment_score(rbind(Uber.tweets_Sentiment,
Lyft.tweets_Sentiment),
"1.AppBased_Taxi")
Normal_Taxi_word_sentiment <- total_sentiment_score(Taxi.tweets_Sentiment,
"2.Normal_Taxi")
Train_word_sentiment <- total_sentiment_score(rbind(Amtrak.tweets_Sentiment,
metro.tweets_Sentiment),
"3.Train")
Bus_word_sentiment <- total_sentiment_score(metrobus.tweets_Sentiment,
"4.Bus")
word_sentiment_analysis_results <- rbind(AppBased_Taxi_word_sentiment,
Normal_Taxi_word_sentiment,
Train_word_sentiment,
Bus_word_sentiment)
word_sentiment_analysis_results %>%
ggplot(aes(x=Sentiment, y=Sentiment_Score, fill=Sentiment))+
geom_col(show.legend = T)+
geom_text(aes(label = paste0(round(Sentiment_Score*100, digits = 2),"%")), nudge_y = 0.05,size = 3)+
facet_wrap(~Service, scales = "free_x",as.table = TRUE)+
theme_bw()+
labs(caption = "Figure 5. Sentiment Analysis at the word level (4 categories)")+
theme(plot.caption = element_text(hjust = 0, face= "italic"), #Default is hjust=1
plot.title.position = "plot", #NEW parameter. Apply for subtitle too.
plot.caption.position =  "plot") #NEW parameter
word_sentiment_analysis_results %>%
ggplot(aes(x=Sentiment, y=Sentiment_Score, fill=Sentiment))+
geom_col(show.legend = T)+
geom_text(aes(label = paste0(round(Sentiment_Score*100, digits = 2),"%")), nudge_y = 0.05,size = 3)+
facet_wrap(~Service, scales = "free_x",as.table = TRUE)+
theme_bw()+
labs(caption = "Figure 5. Sentiment Analysis at the word level (4 categories)")+
theme(plot.caption = element_text(hjust = 10, face= "italic"), #Default is hjust=1
plot.title.position = "plot", #NEW parameter. Apply for subtitle too.
plot.caption.position =  "plot") #NEW parameter
word_sentiment_analysis_results %>%
ggplot(aes(x=Sentiment, y=Sentiment_Score, fill=Sentiment))+
geom_col(show.legend = T)+
geom_text(aes(label = paste0(round(Sentiment_Score*100, digits = 2),"%")), nudge_y = 0.05,size = 3)+
facet_wrap(~Service, scales = "free_x",as.table = TRUE)+
theme_bw()+
labs(caption = "Figure 5. Sentiment Analysis at the word level (4 categories)")+
theme(        plot.caption.position =  "plot") #NEW parameter
word_sentiment_analysis_results %>%
ggplot(aes(x=Sentiment, y=Sentiment_Score, fill=Sentiment))+
geom_col(show.legend = T)+
geom_text(aes(label = paste0(round(Sentiment_Score*100, digits = 2),"%")), nudge_y = 0.05,size = 3)+
facet_wrap(~Service, scales = "free_x",as.table = TRUE)+
theme_bw()+
labs(caption = "Figure 5. Sentiment Analysis at the word level (4 categories)")+
theme(plot.caption = element_text(hjust = 1, face= "italic"), #Default is hjust=1
plot.title.position = "plot", #NEW parameter. Apply for subtitle too.
plot.caption.position =  "plot") #NEW parameter
word_sentiment_analysis_results %>%
ggplot(aes(x=Sentiment, y=Sentiment_Score, fill=Sentiment))+
geom_col(show.legend = T)+
geom_text(aes(label = paste0(round(Sentiment_Score*100, digits = 2),"%")), nudge_y = 0.05,size = 3)+
facet_wrap(~Service, scales = "free_x",as.table = TRUE)+
theme_bw()+
labs(caption = "Figure 5. Sentiment Analysis at the word level (4 categories)")+
theme(plot.caption = element_text(hjust = 0, face= "italic"), #Default is hjust=1
plot.title.position = "plot", #NEW parameter. Apply for subtitle too.
plot.caption.position =  "plot") #NEW parameter
word_sentiment_analysis_results %>%
ggplot(aes(x=Sentiment, y=Sentiment_Score, fill=Sentiment))+
geom_col(show.legend = T)+
geom_text(aes(label = paste0(round(Sentiment_Score*100, digits = 2),"%")), nudge_y = 0.05,size = 3)+
facet_wrap(~Service, scales = "free_x",as.table = TRUE)+
theme_bw()+
labs(caption = "Figure 5. Sentiment Analysis at the word level (4 categories)")+
theme(plot.caption = element_text(hjust = 0.5, face= "italic"), #Default is hjust=1
plot.title.position = "plot", #NEW parameter. Apply for subtitle too.
plot.caption.position =  "plot") #NEW parameter
word_sentiment_analysis_results %>%
ggplot(aes(x=Sentiment, y=Sentiment_Score, fill=Sentiment))+
geom_col(show.legend = T)+
geom_text(aes(label = paste0(round(Sentiment_Score*100, digits = 2),"%")), nudge_y = 0.05,size = 3)+
facet_wrap(~Service, scales = "free_x",as.table = TRUE)+
theme_bw()+
labs(caption = "Figure 5. Sentiment Analysis at the word level (4 categories)")+
theme(plot.caption = element_text(hjust = 0.3, face= "italic"), #Default is hjust=1
plot.title.position = "plot", #NEW parameter. Apply for subtitle too.
plot.caption.position =  "plot") #NEW parameter
word_sentiment_analysis_results %>%
ggplot(aes(x=Sentiment, y=Sentiment_Score, fill=Sentiment))+
geom_col(show.legend = T)+
geom_text(aes(label = paste0(round(Sentiment_Score*100, digits = 2),"%")), nudge_y = 0.05,size = 3)+
facet_wrap(~Service, scales = "free_x",as.table = TRUE)+
theme_bw(plot.caption = element_text(hjust = 0.5))+
labs(caption = "Figure 5. Sentiment Analysis at the word level (4 categories)")
word_sentiment_analysis_results %>%
ggplot(aes(x=Sentiment, y=Sentiment_Score, fill=Sentiment))+
geom_col(show.legend = T)+
geom_text(aes(label = paste0(round(Sentiment_Score*100, digits = 2),"%")), nudge_y = 0.05,size = 3)+
facet_wrap(~Service, scales = "free_x",as.table = TRUE)+
theme_bw(plot.caption = element_text(hjust = 0.5))+
labs(caption = "Figure 5. Sentiment Analysis at the word level (4 categories)")
word_sentiment_analysis_results %>%
ggplot(aes(x=Sentiment, y=Sentiment_Score, fill=Sentiment))+
geom_col(show.legend = T)+
geom_text(aes(label = paste0(round(Sentiment_Score*100, digits = 2),"%")), nudge_y = 0.05,size = 3)+
facet_wrap(~Service, scales = "free_x",as.table = TRUE)+
theme_bw()+
labs(caption = "Figure 5. Sentiment Analysis at the word level (4 categories)")+
theme(plot.caption = element_text(hjust = 0.5))
# Create a function to plot the top 10 negative and positive words for people
# tweets about the ride services in Washington D.C. area
plot_sentiment <- function(tweets_sentiment, top_words=10, figure_title){
tweets_sentiment %>%
group_by(sentiment) %>%
top_n(top_words) %>%
ungroup() %>%
mutate(Percentage = n/sum(n)) %>%
mutate(word = reorder(word,Percentage)) %>%
ggplot(aes(word, Percentage, fill=sentiment))+
geom_col(show.legend = F)+
geom_text(aes(label = label_percent()(Percentage) ), nudge_y = 0.025,
size = 3)+
facet_wrap(~sentiment, scales = "free_y")+
coord_flip()+
theme_bw()+
labs(caption  = figure_title)+
theme(plot.caption = element_text(hjust = 0.5, size = 12))
}
plot_sentiment(RSS.tweets_Sentiment, 10,
"Figure 2. Common negative and Poitive words for the Ridesharing services")
plot_sentiment(PT.tweets_Sentiment, 10,
"Figure 3. Common negative and Poitive words for the Public Transporatio")
rm(list = ls())
# Here are all the search dates to combine them in one file for each service
Date_of_Search <- c("_11.02.2021","_11.12.2021","_11.22.2021","_12.02.2021")
# Here is the directory I use to save the data and then to pull the data from (it can be changed to the directory where you have the data files in):
directory_to_save <-
"Data/"
#Ridesharing services
Taxi.tweets <- data.frame()
Uber.tweets <- data.frame()
Lyft.tweets <- data.frame()
RSS.tweets <- data.frame() #RSS = Ride sharing services
for (i in Date_of_Search){
Uber.tweets <-
read.csv(paste0(directory_to_save,"Uber",i,".csv")) %>%
select(text) %>%mutate(Service = "Uber", date = i) %>%
rbind(Uber.tweets)
Lyft.tweets <-
read.csv(paste0(directory_to_save,"Lyft",i,".csv")) %>%
select(text) %>%mutate(Service = "Lyft", date = i) %>%
rbind(Lyft.tweets)
Taxi.tweets <-
read.csv(paste0(directory_to_save,"Taxi",i,".csv")) %>%
select(text) %>% mutate(Service = "Taxi", date = i) %>%
rbind(Taxi.tweets)
}
library(twitteR)
library(tidyverse)
library(tidytext)
library(ggmap)
library(tcltk)
library(gridExtra)
library(scales)
library(dplyr)
library(kableExtra)
library(sentimentr)
# Here are all the search dates to combine them in one file for each service
Date_of_Search <- c("_11.02.2021","_11.12.2021","_11.22.2021","_12.02.2021")
# Here is the directory I use to save the data and then to pull the data from (it can be changed to the directory where you have the data files in):
directory_to_save <-
"Data/"
#Ridesharing services
Taxi.tweets <- data.frame()
Uber.tweets <- data.frame()
Lyft.tweets <- data.frame()
RSS.tweets <- data.frame() #RSS = Ride sharing services
for (i in Date_of_Search){
Uber.tweets <-
read.csv(paste0(directory_to_save,"Uber",i,".csv")) %>%
select(text) %>%mutate(Service = "Uber", date = i) %>%
rbind(Uber.tweets)
Lyft.tweets <-
read.csv(paste0(directory_to_save,"Lyft",i,".csv")) %>%
select(text) %>%mutate(Service = "Lyft", date = i) %>%
rbind(Lyft.tweets)
Taxi.tweets <-
read.csv(paste0(directory_to_save,"Taxi",i,".csv")) %>%
select(text) %>% mutate(Service = "Taxi", date = i) %>%
rbind(Taxi.tweets)
}
RSS.tweets <- rbind(Uber.tweets, Lyft.tweets,Taxi.tweets)
#Public transportation
Amtrak.tweets <- data.frame()
metro.tweets <- data.frame()
metrobus.tweets <- data.frame()
PT.tweets <- data.frame() #PT = Public Transportation
for (i in Date_of_Search){
Amtrak.tweets <-
read.csv(paste0(directory_to_save,"Amtrak",i,".csv")) %>%
select(text) %>%mutate(Service = "Amtrak", date = i) %>%
rbind(Amtrak.tweets)
metro.tweets <-
read.csv(paste0(directory_to_save,"metro",i,".csv")) %>%
select(text) %>%mutate(Service = "metro", date = i) %>%
rbind(metro.tweets)
metrobus.tweets <-
read.csv(paste0(directory_to_save,"metrobus",i,".csv")) %>%
select(text) %>% mutate(Service = "metrobus", date = i) %>%
rbind(metrobus.tweets)
}
PT.tweets <- rbind(Amtrak.tweets, metro.tweets,metrobus.tweets)
summary_table <- data.frame()
count_searches <- function (data_tweets){
return(c(length(data_tweets[data_tweets$date=="_11.02.2021",]$text),
length(data_tweets[data_tweets$date=="_11.12.2021",]$text),
length(data_tweets[data_tweets$date=="_11.22.2021",]$text),
length(data_tweets[data_tweets$date=="_12.02.2021",]$text)) )
}
Uber_searches <- count_searches(Uber.tweets)
Lyft_searches <- count_searches(Lyft.tweets)
Taxi_searches <- count_searches(Taxi.tweets)
Amtrak_searches <- count_searches(Amtrak.tweets)
Metro_searches <- count_searches(metro.tweets)
Metrobus_searches <- count_searches(metrobus.tweets)
summary_table <- as.data.frame(rbind(Uber_searches,Lyft_searches,Taxi_searches,
Amtrak_searches,Metro_searches,Metrobus_searches)) %>%
mutate(Total = rowSums(.))
rownames(summary_table) <- c("Uber","Lyft","Taxi","Amtrak","Metro","Metrobus")
colnames(summary_table) <- c("11.02.2021","11.12.2021","11.22.2021","12.02.2021","Total")
Tokenization_fun <- function(df){
df$text = gsub("(f|ht)(tp)(s?)(://)(.*)[.|/](.*)", " ", df$text)
#removing link
df$text = gsub("(f|ht)(tp)(s?)(://)(.*)[.|/](.*)", " ", df$text)
# removing hashtags
df$text = gsub("#\\w+", " ", df$text)
# removing @people
df$text = gsub("@\\w+", " ", df$text)
#removing punctuations
df$text = gsub("[[:punct:]]", " ", df$text)
#removing numbers
df$text = gsub("[[:digit:]]", " ", df$text)
#removing emojis
df$text <- str_replace_all(df$text,"[^[:graph:]]"," ")
df$text <- str_replace_all(df$text,'https'," ")
df$text <- str_replace_all(df$text,'amp'," ")
#removing spaces
df$text = gsub("[ \t]{2,}", " ", df$text)
df$text = gsub("^\\s+|\\s+$", "", df$text)
return(df)
}
Taxi.tweets <- Tokenization_fun(Taxi.tweets)
Uber.tweets <- Tokenization_fun(Uber.tweets)
Lyft.tweets <- Tokenization_fun(Lyft.tweets)
RSS.tweets <- rbind(Taxi.tweets, Uber.tweets, Lyft.tweets)
Amtrak.tweets <- Tokenization_fun(Amtrak.tweets)
metro.tweets <- Tokenization_fun(metro.tweets)
metrobus.tweets <- Tokenization_fun(metrobus.tweets)
PT.tweets <- rbind(Amtrak.tweets, metro.tweets, metrobus.tweets)
